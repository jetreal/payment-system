{"version":3,"sources":["components/pages/Register/FormWarning/formWarning.module.sass","components/common/LoginButton/loginButton.module.sass","components/common/Preloader/preloader.module.sass","components/pages/Main/transactionBlock/transactionBlock.module.sass","components/pages/Register/RegisterForm/form.module.sass","components/pages/Login/login.module.sass","utils/validators/validator.js","components/common/FormInput.jsx","components/pages/Login/LoginForm/LoginForm.jsx","components/pages/Register/FormWarning/FormWarning.jsx","components/common/LoginButton/LoginButton.jsx","api/api.js","redux/localStorage/index.js","redux/actions/index.js","redux/types/index.js","components/pages/Login/LoginContainer.js","components/pages/Login/Login.jsx","components/pages/Register/RegisterForm/RegisterForm.jsx","redux/actions/mainActions/index.js","components/pages/Register/ContainerRegister.js","components/pages/Register/Register.jsx","components/pages/Main/mainHeader/MainHeader.jsx","components/pages/Main/buttonSection/styledButton.js","components/pages/Main/buttonSection/ButtonSection.jsx","components/pages/Main/transactionBlock/userForm/UserForm.jsx","components/common/RadioButton/RadioButton.jsx","components/pages/Main/transactionBlock/checkUserForm/checkUserFrom.jsx","components/pages/Main/transactionBlock/TransactionBlock.jsx","components/pages/Main/historyBlock/HistoryBlock.jsx","components/common/Preloader/Preloader.jsx","hoc/withAuthRedirect.js","components/pages/Main/MainContainer.js","components/pages/Main/Main.jsx","App.js","redux/reducers/LoginReducer.js","redux/reducers/MainReducer.js","redux/sagas/index.js","redux/index.js","index.js","components/pages/Main/historyBlock/historyBlock.module.sass","components/pages/Main/main.module.sass","components/pages/Main/mainHeader/mainHeader.module.sass","components/pages/Main/buttonSection/buttonSection.module.sass","components/pages/Main/transactionBlock/userForm/userForm.module.sass"],"names":["module","exports","required","value","onlyLetterAndNumber","match","availability","some","MainState","userData","balance","passwordsMustMatch","allValues","password","length","undefined","validateLength","minLength","maxLength","isEmail","values","test","number","isNaN","Number","input","meta","props","myRef","useRef","current","ref","onMouseEnter","name","event","onkeydown","keyCode","error","visited","style","color","fontSize","WrapLoginForm","reduxForm","form","initialValues","email","onSubmit","handleSubmit","className","textbox","Field","component","FormInput","type","placeholder","autoComplete","validate","regInput","btn","onClick","collectUserData","disabled","pristine","submitting","invalid","opacity","cursor","FormWarning","formWarning","warningText","loginButton","logout","instance","axios","withCredentials","baseURL","headers","registration","regData","data","option","url","method","qs","stringify","catch","response","console","log","status","request","message","config","getToken","getLoggedUserInfo","token","Authorization","getListUserTransaction","getFilteredUserList","filteredChar","filter","username","cleateTransaction","transaction","loadState","serializedState","localStorage","getItem","JSON","parse","err","saveState","state","setItem","onClearFromWarning","onSubmitLogin","loginData","CenterContainer","connect","LoginState","LoginReducer","login","onSubmitLoginAsync","dispatch","a","id_token","reset","errorData","slice","isChangeLoginPage","to","LoginButton","CSSTransition","in","appear","timeout","enter","exit","classNames","loginBox","onChange","maxNameLength","RegisterReduxForm","onTransactionFail","transData","onFetchCurrentUserDataAsync","userObj","onGetListUserTransactionAsync","arrTransactions","RegisterContainer","allSystemUsers","MainReducer","onSubmitRegisterAsync","registerData","allUsers","user","servResponce","fetchAllSystemUsersAsync","t","arrAllChars","forEach","char","filterObj","push","arrUsers","useEffect","isChangeRegisterPage","formData","useState","isLoad","setIsLoad","setTimeout","mainHeader","transform","wellcome","StyledButton","styled","button","isActive","StyledButtonLeft","StyledButtonRight","wrapperButtonSection","btnLeft","showHistorySection","isTransactionBlockActive","isHistoryBlockActive","btnRight","showCreateSection","UserReduxForm","min","max","normalize","previousValue","RadioField","rest","checkUserForm","recipients","map","recipient","htmlFor","id","key","inputRadio","inputChoose","hasCheckedValue","pointerEvents","selector","formValueSelector","transObj","amount","isRecipients","wrapper","header","clearBtn","onClearRecipient","onFetchFilterRecipientAsync","setRecipientName","recipientDiv","recipientName","setRecipientAmount","wrapperConfirmButtons","onTransactionAsync","bind","Styles","div","columns","React","useMemo","Header","accessor","defaultPropGetter","wrapperHistory","hint","tableWrapper","getRowProps","useTable","initialState","pageIndex","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","pageSize","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","cells","cell","getCellProps","pagination","pageNumber","defaultValue","e","target","width","arrayOfTransactions","Math","sign","original","onDoubleClick","repeatTransaction","background","wrapperImage","isLoaded","zIndex","mapStateToPropsForRedirect","isAuth","AuthRedirectComponent","Component","RedirectComponent","this","withAuthRedirect","setIsLoaded","isTransactionButton","appearHome","main","onLoad","Preloader","MainHeader","onLogout","ButtonSection","onButtonCreateTransaction","onButtonHistoryTransaction","isHistoryButton","TransactionBlock","filterRecipients","isTransationSuccess","congratulationWrap","successRecipient","isTransationFailed","HistoryBlock","MainContainer","filteredList","trim","recipientAmount","allTransactionDataObj","App","path","exact","LoginContainer","ContainerRegister","isRegisterSucces","jwt","action","stateCopy","statusText","objOfSuccessTransaction","abs","trans_token","user_info_token","itAuth","watchIncrementAsync","clearTransWarnings","delayChangeRegisterPage","delayChangeLoginPage","rootSaga","delay","ms","Promise","res","takeEvery","put","all","sagaMiddleware","createSagaMiddleware","middleware","ReduxThunk","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","run","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cd31d22d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWarning\":\"formWarning_formWarning__1lgSp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginButton\":\"loginButton_loginButton__SXmFW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperImage\":\"preloader_wrapperImage__1oU8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"transactionBlock_wrapper__2LPvv\",\"inputRadio\":\"transactionBlock_inputRadio__3jDCj\",\"inputChoose\":\"transactionBlock_inputChoose__1IfgM\",\"clearBtn\":\"transactionBlock_clearBtn__3dHJi\",\"recipientDiv\":\"transactionBlock_recipientDiv__RyzNf\",\"recipientName\":\"transactionBlock_recipientName__2nzu0\",\"wrapperConfirmButtons\":\"transactionBlock_wrapperConfirmButtons__1t30S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textbox\":\"form_textbox__YGvfT\",\"btn\":\"form_btn__1sn24\",\"regInput\":\"form_regInput__yzJUB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBox\":\"login_loginBox__Smg55\",\"textbox\":\"login_textbox__1M9KA\",\"btn\":\"login_btn__3SxeW\"};","export const required = value => {\r\n  if (value) return undefined;\r\n\r\n  return '* Field is required'\r\n}\r\n\r\nexport const onlyLetterAndNumber = value => {\r\n  if (!value.match(/[^a-zA-Zа-яА-Я0-9]/g)) return undefined;\r\n\r\n  return '* Invalid simbol'\r\n}\r\n\r\nexport const availability = (value = 0, name, some) => {\r\n\r\n  if ( +value <= +some.MainState.userData.balance) return undefined;\r\n\r\n  return '* your balance is lower'\r\n}\r\n\r\nexport const passwordsMustMatch = (value = 0, allValues) => \r\n\r\n  (value !== allValues.password && value.length > 0) ? \r\n    'Passwords do not match' :\r\n     undefined\r\n\r\nexport const validateLength = (minLength = 0, maxLength) => (value = 0) => {\r\n  if (value.length < minLength && value.length !== 0) {\r\n    return `* Min length is ${minLength} symbols`\r\n  }\r\n  else if (value.length > maxLength ) {\r\n    return `* Max length is ${maxLength} symbols`\r\n  } else {\r\n    return undefined\r\n  };\r\n}\r\n\r\nexport const isEmail = (values = 0) => {\r\n  if (!values) {\r\n    return undefined\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values)) {\r\n    return 'Invalid email address'\r\n  } else if (values.length === 0) {\r\n    return ' '\r\n  }\r\n}\r\n\r\nexport const number = value => value && isNaN(Number(value)) ? 'Must be a number' : undefined\r\n","import React, {useRef} from 'react'\r\n\r\nexport default ({input, meta, ...props}) => {\r\n  const myRef = useRef(null);\r\n  const resRef = myRef.current\r\n  return (\r\n    <div >\r\n      <input ref={myRef} {...input} {...props}\r\n        onMouseEnter={(input.name === 'amount') ? (event) => myRef.current.onkeydown = (event) => event.keyCode === 32 ? false : true : null}\r\n      />\r\n      <br/>\r\n      { (meta.error && meta.visited) && <span style={{color: 'yellow', fontSize: \".8rem\"}}>{meta.error}</span> } \r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport style from '../login.module.sass'\r\nimport {Field, reduxForm} from 'redux-form'\r\n\r\nimport { validateLength, isEmail } from '../../../../utils/validators/validator'\r\nimport FormInput from '../../../common/FormInput'\r\n\r\n\r\nconst maxLength = validateLength(4, 20)\r\n\r\nlet LoginForm = (props) => {\r\n\treturn (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <h1>Login</h1>\r\n        <div className={style.textbox}>\r\n          <Field\r\n            component={FormInput} \r\n            name={'email'} \r\n            type={\"email\"} \r\n            placeholder={\"Email\"} \r\n            // className={style.regInput}\r\n            autoComplete=\"off\"\r\n            validate={[isEmail]}\r\n          />\r\n        </div>\r\n\r\n        <div className={style.textbox}>\r\n          <Field \r\n            component={FormInput}\r\n            name={'password'} \r\n            type={\"password\"} \r\n            placeholder={\"Password\"} \r\n            className={style.regInput} \r\n            autoComplete=\"off\"\r\n            validate={[maxLength]}\r\n          />\r\n        </div>\r\n        \r\n        <input \r\n          type=\"submit\" \r\n          className={style.btn} \r\n          value=\"Sign in\"\r\n          onClick={props.collectUserData}\r\n          disabled={props.pristine || props.submitting}\r\n          style={(props.pristine || props.submitting || props.invalid ) ? {opacity: 0.4, cursor: 'not-allowed'} : {opacity: 1}}\r\n        />\r\n      </form>\r\n\t)\r\n}\r\n\r\n\r\nconst WrapLoginForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login',\r\n    // onSubmit: value => console.log('second', value),\r\n    initialValues: {\r\n      email: 'jet@gmail.com',\r\n      password: 'jet3333'\r\n    }\r\n  })(LoginForm)\r\n  \r\n\r\nexport default WrapLoginForm\r\n","import React from 'react'\r\nimport style from './formWarning.module.sass'\r\n\r\n\r\nconst FormWarning = (props) => {\r\n\r\n\treturn (\r\n    <div className={style.formWarning}>\r\n\t\t\t<p>\r\n\t\t\t\t{props.warningText}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FormWarning","import React from 'react'\r\nimport style from './loginButton.module.sass'\r\n\r\nexport default (props) => {\r\n  return (\r\n    <button className={style.loginButton} onClick={props.logout}>\r\n      {props.name}\r\n    </button>\r\n  )\r\n}","import * as axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nexport const instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"http://193.124.114.46:3001\",\r\n  headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n});\r\n\r\nexport const registration = (regData) => {\r\n  const data = regData;\r\n  const option = {\r\n    url: '/users',\r\n    method: 'POST',\r\n    data: qs.stringify(data),\r\n  };\r\n  return instance(option)\r\n    .catch(function (error) {\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n        return error.response.data\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        console.log(error.request);\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error', error.message);\r\n      }\r\n      console.log(error.config);\r\n    })\r\n}\r\n\r\nexport const getToken = (data) => {\r\n  // const data = {\"email\":\"jet@gmail.com\", \"password\":\"jet333\"};\r\n  const option = {\r\n    url: '/sessions/create',\r\n    method: 'POST',\r\n    data: qs.stringify(data),\r\n  };\r\n  return instance(option)\r\n}\r\n\r\nexport const getLoggedUserInfo = (token) => {\r\n  const option = {\r\n    url: '/api/protected/user-info',\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: \"bearer \" + token\r\n      \r\n    }\r\n  }\r\n  return instance(option)\r\n    .catch(function (error) {\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n        return error.response.status\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        console.log(error.request);\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error', error.message);\r\n      }\r\n      console.log(error.config);\r\n    })\r\n}\r\n\r\nexport const getListUserTransaction = (token) => {\r\n  const option = {\r\n    url: '/api/protected/transactions',\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: \"bearer \" + token\r\n    }\r\n  }\r\n  return instance(option)\r\n    .catch(function (error) {\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n        return error.response.status\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        console.log(error.request);\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error', error.message);\r\n      }\r\n      console.log(error.config);\r\n    })\r\n}\r\n\r\nexport const getFilteredUserList = (filteredChar, token) => {\r\n  const data = {};\r\n  data.filter = filteredChar.username\r\n  const option = {\r\n    url: '/api/protected/users/list',\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: \"bearer \" + token,\r\n      \r\n    },\r\n    data: qs.stringify(data),\r\n  }\r\n  return instance(option)\r\n    .catch(function (error) {\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n        return error.response.data\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        console.log(error.request);\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error', error.message);\r\n      }\r\n      console.log(error.config);\r\n    })\r\n}\r\n\r\n\r\nexport const cleateTransaction = (transaction, token) => {\r\n  // const data = {};\r\n  // data.name = transaction.name\r\n  // data.amount = transaction.amount\r\n  const option = {\r\n    url: '/api/protected/transactions',\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: \"bearer \" + token\r\n    },\r\n    data: qs.stringify(transaction),\r\n  }\r\n  return instance(option)\r\n    .catch(function (error) {\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n        return error.response.data\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        console.log(error.request);\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error', error.message);\r\n      }\r\n      console.log(error.config);\r\n    })\r\n}","export const loadState = () => {\r\n  try {\r\n      const serializedState = localStorage.getItem('id_token');\r\n      if (serializedState === null) {\r\n          return undefined;\r\n      }\r\n      return JSON.parse(serializedState);\r\n  } catch (err) {\r\n      return console.log(err);\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem('id_token', serializedState);\r\n  } catch (err) {\r\n      // ignore write errors\r\n  }\r\n}","\r\nimport {\r\n  SUBMIT_LOGIN,\r\n  ON_LOGIN_ERROR,\r\n  LOGOUT,\r\n  SUBMIT_REGISTER,\r\n  ON_REGISTER_ERROR,\r\n  CLEAR_FORM_WARNING\r\n} from \"../types\";\r\nimport { getToken, registration } from \"../../api/api\";\r\nimport { reset } from 'redux-form';\r\nimport { saveState } from \"../localStorage\";\r\n\r\nexport function onClearFromWarning() {\r\n  return {\r\n    type: CLEAR_FORM_WARNING\r\n  }\r\n}\r\n\r\nexport function onLogout() {\r\n  return {\r\n    type: LOGOUT\r\n  }\r\n}\r\n\r\nexport function onSubmitLogin(loginData) {\r\n  return {\r\n    type: SUBMIT_LOGIN,\r\n    loginData\r\n  }\r\n}\r\n\r\nexport function onLoginError(errorData) {\r\n  return {\r\n    type: ON_LOGIN_ERROR,\r\n    errorData\r\n  }\r\n}\r\n\r\nexport const onSubmitLoginAsync = (loginData) => async (dispatch) => {\r\n  try {\r\n    const response = await getToken(loginData)\r\n\r\n    saveState(response.data.id_token)\r\n    dispatch(onSubmitLogin(response))\r\n    reset('login');\r\n  } catch (e) {\r\n    dispatch(onLoginError(e.message.slice(-3)))\r\n    // dispatch(reset('login'));\r\n  }\r\n}\r\n\r\n/////////////////////////////////////////\r\nexport function onSubmitRegister(servResponce) {\r\n  return {\r\n    type: SUBMIT_REGISTER,\r\n    servResponce\r\n  }\r\n}\r\nexport function onSubmitError(errorData) {\r\n  return {\r\n    type: ON_REGISTER_ERROR,\r\n    errorData\r\n  }\r\n}\r\n\r\nexport const onSubmitRegisterAsync = (registerData, allUsers) => async (dispatch) => {\r\n  try {\r\n    const match = allUsers.filter(user => user.name === registerData.username)\r\n    if (match.length !== 0) {\r\n      await dispatch(onSubmitError('User with this name exist'))\r\n      return\r\n    }\r\n\r\n    const response = await registration(registerData)\r\n\r\n\r\n    dispatch(onSubmitRegister(response))\r\n    // reset('register');\r\n  } catch (e) {\r\n    console.log(e)\r\n    // dispatch(onSubmitError(response))\r\n    // dispatch(onSubmitError(response))\r\n    // reset('login');\r\n  }\r\n}","export const SUBMIT_LOGIN = 'SUBMIT_LOGIN';\r\nexport const SUBMIT_REGISTER = 'SUBMIT_REGISTER';\r\nexport const ON_LOGIN_ERROR = 'ON_LOGIN_ERROR';\r\nexport const ON_REGISTER_ERROR = 'ON_SUBMIT_ERROR';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const CHANGE_REGISTERPAGE_WITH_DELAY = 'CHANGE_REGISTERPAGE_WITH_DELAY';\r\nexport const CHANGE_LOGINPAGE_WITH_DELAY = 'CHANGE_LOGINPAGE_WITH_DELAY';\r\nexport const CLEAR_FORM_WARNING = 'CLEAR_FORM_WARNING';\r\n\r\n\r\nexport const FETCH_USER_DATA = 'FETCH_USER_DATA';\r\nexport const FETCH_USER_DATA_ERROR = 'FETCH_USER_DATA_ERROR';\r\nexport const ON_BUTTON_CREATE_TRANSACTION = 'ON_BUTTON_CREATE_TRANSACTION';\r\nexport const ON_BUTTON_HISTORY_TRANSACTION = 'ON_BUTTON_HISTORY_TRANSACTION';\r\nexport const ON_GET_USERS = 'ON_GET_USERS';\r\nexport const ON_CLEAR_RECIPIENT_LIST = 'ON_CLEAR_RECIPIENT_LIST';\r\nexport const SET_RECIPIENT_NAME = 'SET_RECIPIENT_NAME';\r\nexport const SET_RECIPIENT_AMOUNT = 'SET_RECIPIENT_AMOUNT';\r\nexport const ON_TRANSACTION_SUCCESS = 'ON_TRANSACTION_SUCCESS';\r\nexport const ON_TRANSACTION_FAil = 'ON_TRANSACTION_FAil';\r\nexport const CLEAN_TRANSACTION_WARNINGS = 'CLEAN_TRANSACTION_WARNINGS';\r\nexport const CLOSE_MENU = 'CLOSE_MENU';\r\nexport const GET_LIST_USER_TRANSACTION = 'GET_LIST_USER_TRANSACTION';\r\nexport const REPEAT_TRANSACTION = 'REPEAT_TRANSACTION';\r\nexport const FETCH_ALL_SYSTEM_USERS = 'FETCH_ALL_SYSTEM_USERS';\r\n","import { connect } from 'react-redux';\r\n\r\nimport Login from './Login';\r\nimport { onSubmitLoginAsync, onClearFromWarning } from '../../../redux/actions';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  // console.log(state)\r\n    return {\r\n        LoginState: state.LoginReducer,\r\n        form: state.form.login\r\n    } \r\n}\r\n\r\n\r\n\r\nconst CenterContainer = connect(\r\n  mapStateToProps,\r\n    {\r\n      onSubmitLoginAsync,\r\n      onClearFromWarning\r\n    }\r\n)(Login)\r\n\r\nexport default CenterContainer\r\n\r\n","import React from 'react'\r\nimport style from './login.module.sass'\r\nimport FormContainer from './LoginForm/LoginForm'\r\nimport FormWarning from '../Register/FormWarning/FormWarning'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\nimport LoginButton from '../../common/LoginButton/LoginButton'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\n\r\n\r\nexport default (props) => {\r\n\r\n\tconst onSubmit = (data) => {\r\n\t\tprops.onSubmitLoginAsync(data)\r\n\t}\r\n\r\n\tif (props.LoginState.isChangeLoginPage) {\r\n\t\treturn <Redirect to=\"/\" />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<NavLink to=\"/register\">\r\n        <LoginButton name=\"register\"/>\r\n      </NavLink>\r\n\t\t\t<CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={{\r\n          appear: 1000,\r\n          enter: 1000,\r\n          exit: 1000\r\n        }}\r\n        classNames=\"fadeRegister\"\r\n      >\r\n\t\t\t\t<div className={style.loginBox}>\r\n\t\t\t\t\t<FormContainer onSubmit={onSubmit} onChange={props.onClearFromWarning}/>\r\n\t\t\t\t\t\t{props.LoginState.warningText && \r\n\t\t\t\t\t<CSSTransition\r\n\t\t\t\t\tin={true}\r\n\t\t\t\t\tappear={true}\r\n\t\t\t\t\ttimeout={{\r\n\t\t\t\t\t\tappear: 1000,\r\n\t\t\t\t\t\tenter: 1000,\r\n\t\t\t\t\t\texit: 1000\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassNames=\"fadeRegister\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<FormWarning warningText={props.LoginState.warningText}/>\r\n\t\t\t\t</CSSTransition>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</CSSTransition>\r\n\t\t</div>\r\n\t\t\t\r\n\t)\r\n}","import React from 'react'\r\nimport style from './form.module.sass'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport { validateLength, isEmail, required, passwordsMustMatch, onlyLetterAndNumber } from '../../../../utils/validators/validator'\r\nimport FormInput from '../../../common/FormInput'\r\n\r\n\r\nconst maxLength = validateLength(4, 20)\r\nconst maxNameLength = validateLength(null, 26)\r\n\r\n\r\nconst RegisterForm = (props) => {\r\n\r\n\treturn (\r\n    \r\n    <div>\r\n      <form onSubmit={props.handleSubmit} >\r\n        <div className={style.textbox}>\r\n          <Field\r\n            component={FormInput} \r\n            name={'username'} \r\n            type={\"text\"} \r\n            placeholder={\"Username\"} \r\n            className={style.regInput} \r\n            autoComplete=\"off\"\r\n            validate={[required, maxNameLength, onlyLetterAndNumber]}\r\n          />\r\n        </div>\r\n\r\n        <div className={style.textbox}>\r\n          <Field\r\n            component={FormInput} \r\n            name={'email'} \r\n            type={\"email\"} \r\n            placeholder={\"Email\"} \r\n            className={style.regInput} \r\n            autoComplete=\"off\"\r\n            validate={[isEmail, required]}\r\n          />\r\n        </div>\r\n\r\n        <div className={style.textbox}>\r\n          <Field \r\n            component={FormInput} \r\n            name={'password'} \r\n            type={\"password\"} \r\n            placeholder={\"Password\"} \r\n            className={style.regInput} \r\n            autoComplete=\"off\"\r\n            validate={[maxLength, required]}\r\n          />\r\n        </div>\r\n\r\n        <div className={style.textbox}>\r\n          <Field \r\n            component={FormInput} \r\n            name={'confirmPassword'} \r\n            type={\"password\"} \r\n            placeholder={\"Confirm Password\"} \r\n            className={style.regInput} \r\n            autoComplete=\"off\"\r\n            validate={[passwordsMustMatch, required]}\r\n          />\r\n        </div>\r\n        \r\n        <input \r\n          type=\"submit\" \r\n          className={style.btn} \r\n          value=\"Register\"\r\n          onClick={props.collectUserData}\r\n          disabled={props.pristine || props.submitting}\r\n          style={(props.pristine || props.submitting || props.invalid ) ? {opacity: 0.4, cursor: 'not-allowed'} : {opacity: 1}}\r\n        />\r\n\r\n      </form>\r\n      \r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst RegisterReduxForm = reduxForm({\r\n  // a unique name for the form\r\n  form: 'register',\r\n  initialValues: {\r\n    // email: 'jet@gmail.com',\r\n    // password: 'jet3333'\r\n  }\r\n})(RegisterForm)\r\n\r\nexport default RegisterReduxForm","import {\r\n  FETCH_USER_DATA,\r\n  LOGOUT,\r\n  ON_BUTTON_CREATE_TRANSACTION,\r\n  ON_BUTTON_HISTORY_TRANSACTION,\r\n  ON_GET_USERS,\r\n  ON_CLEAR_RECIPIENT_LIST,\r\n  SET_RECIPIENT_NAME,\r\n  SET_RECIPIENT_AMOUNT,\r\n  ON_TRANSACTION_SUCCESS,\r\n  ON_TRANSACTION_FAil,\r\n  GET_LIST_USER_TRANSACTION,\r\n  REPEAT_TRANSACTION,\r\n  FETCH_ALL_SYSTEM_USERS\r\n} from \"../../types\";\r\nimport { loadState } from \"../../localStorage\";\r\nimport { getLoggedUserInfo, getFilteredUserList, cleateTransaction, getListUserTransaction, getToken } from \"../../../api/api\";\r\n\r\nimport {reset} from 'redux-form';\r\n\r\n\r\n\r\n\r\n\r\nexport function setAllUsers(arrUsers) {\r\n  return {\r\n    type: FETCH_ALL_SYSTEM_USERS,\r\n    arrUsers\r\n  }\r\n}\r\n\r\nexport const fetchAllSystemUsersAsync = () => async (dispatch) => {\r\n  const t = await getToken({\"email\": \"dima@gmail.com\", \"password\": \"dima333\"})\r\n  let allUsers = []\r\n  const arrAllChars = ['q','w','e','r','t','y','u','i','o','p','a','s','d','f','g','h','j','k','l','z','x','c','v','b','n','m','1','2','3','4','5','6','7','8','9','0']\r\n  await arrAllChars.forEach(async (char) => {\r\n    const filterObj = {username: char}\r\n    const partOfUsers = await getFilteredUserList(filterObj, t.data.id_token)\r\n    partOfUsers.data.forEach(user => allUsers.push(user))\r\n  })\r\n  await dispatch(setAllUsers(allUsers))\r\n}\r\n\r\n\r\nexport function repeatTransaction(transData) {\r\n  return {\r\n    type: REPEAT_TRANSACTION,\r\n    transData: transData\r\n  }\r\n}\r\nfunction onTransactionFail(transData) {\r\n  return {\r\n    type: ON_TRANSACTION_FAil,\r\n    transData: transData\r\n  }\r\n}\r\n\r\nfunction onTransactionSuccess(transData) {\r\n  return {\r\n    type: ON_TRANSACTION_SUCCESS,\r\n    transData: transData\r\n  }\r\n}\r\n\r\nexport const onTransactionAsync = (transObj) => async (dispatch) => {\r\n\r\n  try {\r\n    const token = await loadState()\r\n    const allTransactionDataObj = await cleateTransaction(transObj, token)\r\n    if (typeof allTransactionDataObj === 'string') {\r\n      if (allTransactionDataObj.trim() === 'UnauthorizedError: jwt malformed') {\r\n        await dispatch(onTransactionFail())\r\n      } \r\n    }\r\n      await dispatch(onTransactionSuccess(allTransactionDataObj))\r\n      await dispatch(onGetListUserTransactionAsync())\r\n      await dispatch(onFetchCurrentUserDataAsync())\r\n \r\n  } catch (e) {\r\n    console.log(e)\r\n    // dispatch(onTransactionFail())\r\n  }\r\n}\r\n\r\n// checkUser\r\nexport function setRecipientAmount(recipientAmount) {\r\n  return {\r\n    type: SET_RECIPIENT_AMOUNT,\r\n    amount: +recipientAmount.amount\r\n  }\r\n}\r\n\r\nexport function setRecipientName(recipientName) {\r\n  return {\r\n    type: SET_RECIPIENT_NAME,\r\n    name: recipientName.username\r\n  }\r\n}\r\n\r\nexport const onClearRecipient = () => async (dispatch) => {\r\n  await dispatch(reset('getUser'));\r\n  await dispatch(reset('checkUser'));\r\n  dispatch({type: ON_CLEAR_RECIPIENT_LIST})\r\n  // return {\r\n  //   type: ON_CLEAR_RECIPIENT_LIST\r\n  // }\r\n}\r\n\r\nfunction onGetUsers(recipients) {\r\n  return {\r\n    type: ON_GET_USERS,\r\n    recipients\r\n  }\r\n}\r\n\r\nexport const onFetchFilterRecipientAsync = (filteredChar) => async (dispatch) => {\r\n  if (filteredChar.username != null) {\r\n    try {\r\n      const token = await loadState()\r\n      const filteredList = await getFilteredUserList(filteredChar, token)\r\n      if (typeof filteredList === 'string') {\r\n        if (filteredList.trim() === 'UnauthorizedError: jwt malformed') {\r\n          await dispatch(onTransactionFail())\r\n        } \r\n      }\r\n\r\n      dispatch(onGetUsers(filteredList))\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport function onButtonCreateTransaction() {\r\n  return {\r\n    type: ON_BUTTON_CREATE_TRANSACTION\r\n  }\r\n}\r\n\r\nexport function onButtonHistoryTransaction() {\r\n  return {\r\n    type: ON_BUTTON_HISTORY_TRANSACTION\r\n  }\r\n}\r\n\r\nfunction onFetchUserData(userObj) {\r\n  return {\r\n    type: FETCH_USER_DATA,\r\n    userObj\r\n  }\r\n}\r\nfunction onFetchUserDataError() {\r\n  return {\r\n    type: LOGOUT\r\n  }\r\n}\r\n\r\nexport const onFetchCurrentUserDataAsync = () => async (dispatch) => {\r\n  try {\r\n    const token = await loadState()\r\n    const userData = await getLoggedUserInfo(token)\r\n    dispatch(onFetchUserData(userData))\r\n  } catch (e) {\r\n    dispatch(onFetchUserDataError());\r\n  }\r\n}\r\n\r\nexport const onGetListUserTransactionAsync = () => async (dispatch) => {\r\n  try {\r\n    const token = await loadState()\r\n    const arrTransactions = await getListUserTransaction(token)\r\n    dispatch({type: GET_LIST_USER_TRANSACTION, arrTransactions})\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}","import { connect } from 'react-redux';\r\n\r\nimport Register from './Register';\r\nimport { onSubmitRegisterAsync, onClearFromWarning } from '../../../redux/actions';\r\n// import RegisterReduxForm from './RegisterForm/RegisterForm';\r\nimport { fetchAllSystemUsersAsync } from '../../../redux/actions/mainActions';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  // console.log(state)\r\n  return {\r\n    allSystemUsers: state.MainReducer.allSystemUsers,\r\n    LoginState: state.LoginReducer,\r\n    form: state.form.login\r\n  }\r\n}\r\n\r\n\r\n\r\nconst RegisterContainer = connect(\r\n  mapStateToProps,\r\n  {\r\n    onSubmitRegisterAsync,\r\n    onClearFromWarning,\r\n    fetchAllSystemUsersAsync\r\n  }\r\n)(Register)\r\n\r\n\r\nexport default RegisterContainer\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport style from \"../Login/login.module.sass\";\r\nimport RegisterForm from \"./RegisterForm/RegisterForm\";\r\nimport FormWarning from \"./FormWarning/FormWarning\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport LoginButton from \"../../common/LoginButton/LoginButton\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\n\r\n\r\n\r\nexport default props => {\r\n  useEffect(() => {\r\n    props.onClearFromWarning();\r\n    props.fetchAllSystemUsersAsync()\r\n  }, []);\r\n\r\n  if (props.LoginState.isChangeRegisterPage) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n  const allUsers = props.allSystemUsers\r\n \r\n  const onRegisterSubmit = (formData) => {\r\n    props.onSubmitRegisterAsync(formData, allUsers);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavLink to=\"/login\">\r\n        <LoginButton name=\"login\" />\r\n      </NavLink>\r\n      <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={{\r\n          appear: 1000,\r\n          enter: 1000,\r\n          exit: 1000\r\n        }}\r\n        classNames=\"fadeRegister\"\r\n      >\r\n        <div className={style.loginBox}>\r\n          <h1>Register</h1>\r\n\r\n          <RegisterForm\r\n            onSubmit={onRegisterSubmit}\r\n            onChange={props.onClearFromWarning}\r\n          />\r\n          {props.LoginState.warningText && (\r\n            <CSSTransition\r\n            in={true}\r\n            appear={true}\r\n            timeout={{\r\n              appear: 1000,\r\n              enter: 1000,\r\n              exit: 1000\r\n            }}\r\n            classNames=\"fadeRegister\"\r\n          > \r\n            <FormWarning warningText={props.LoginState.warningText} />\r\n          </CSSTransition>\r\n            \r\n          )}\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState, useEffect} from 'react'\r\nimport style from './mainHeader.module.sass'\r\nimport LoginButton from '../../../common/LoginButton/LoginButton';\r\n\r\nexport default (props) => {\r\n  let [isLoad, setIsLoad] = useState(false)\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsLoad(isLoad = !isLoad)\r\n    }, 500)\r\n  }, []);\r\n  return (\r\n    <header className={style.mainHeader}\r\n            style={{transform: !isLoad ? 'translateY(-200px)': 'translateY(0px)'}}\r\n    >\r\n      <LoginButton name=\"logout\" logout={props.logout} />\r\n      <div className={style.wellcome}>\r\n        <p>Wellcome:\r\n          <span>\r\n            {props.name}\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div className={style.balance}>\r\n        <p>Your balance:\r\n          <span>\r\n            {props.balance}\r\n          </span> \r\n           PW\r\n        </p>\r\n      </div>\r\n    </header>\r\n  )\r\n} ","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n    opacity: ${props => !props.isActive ? '1' : '0.2'};\r\n    cursor: ${props => !props.isActive ? 'pointer' : 'not-allowed'};\r\n    width: 220px;\r\n    height: 40px;\r\n    background: rgba(0,0,0, .2);\r\n    color: white;\r\n    font-size: 1.2rem;\r\n    border: 2px green solid;\r\n    border-radius: 6px;\r\n    transform: ${props => props.isLoad ? 'translateX(100px)' : 'translateX(0px)'};\r\n    transition: all 1s;\r\n\r\n\r\n`\r\n\r\nexport const StyledButtonLeft = styled(StyledButton)`\r\ntransform: ${props => !props.isLoad ? 'translateX(-180px)' : 'translateX(0px)'};\r\n`\r\n\r\nexport const StyledButtonRight = styled(StyledButton)`\r\ntransform: ${props => !props.isLoad ? 'translateX(180px)' : 'translateX(0px)'};\r\n`","import React, {useState, useEffect} from 'react'\r\nimport style from './buttonSection.module.sass'\r\nimport { StyledButtonLeft, StyledButtonRight } from './styledButton'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\n\r\n\r\nexport default (props) => {\r\n  let [isLoad, setIsLoad] = useState(false)\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsLoad(isLoad = !isLoad)\r\n    }, 500)\r\n  }, []);\r\n  return (\r\n    <div className={style.wrapperButtonSection}>\r\n      <div className={style.btnLeft}>\r\n        <StyledButtonLeft\r\n          onClick={props.showHistorySection}\r\n          isActive={props.isTransactionBlockActive}\r\n          isLoad={isLoad}\r\n        >\r\n          {!props.isHistoryBlockActive ? 'Transaction History' : 'close'}\r\n        </StyledButtonLeft>\r\n      </div>\r\n      <div className={style.btnRight}>\r\n        <StyledButtonRight\r\n          onClick={ props.showCreateSection }\r\n          isActive={props.isHistoryBlockActive}\r\n          isLoad={isLoad}\r\n        >\r\n          {!props.isTransactionBlockActive ? 'Create new transaction' : 'close'}\r\n        </StyledButtonRight>\r\n      </div>\r\n    </div>\r\n  )\r\n} ","import React from \"react\";\r\nimport style from \"./userForm.module.sass\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n// import { validateLength, isEmail, required, passwordsMustMatch } from '../../../../utils/validators/validator'\r\nimport FormInput from \"../../../../common/FormInput\";\r\nimport {\r\n  validateLength,\r\n  required,\r\n  availability,\r\n  number\r\n} from \"../../../../../utils/validators/validator\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst maxLength = validateLength(4, 20);\r\nconst maxNameLength = validateLength(null, 24);\r\n\r\nconst lessThan = otherField => (value, previousValue, allValues) => {\r\n  return value < 10001 ? value : previousValue;\r\n};\r\n\r\nconst userForm = props => {\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div className={style.textbox}>\r\n          <Field\r\n            component={FormInput}\r\n            name={!props.number ? \"username\" : \"amount\"}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            className={style.regInput}\r\n            autoComplete=\"off\"\r\n            maxLength={props.number ? \"5\" : \"24\"}\r\n            validate={\r\n              props.number !== \"number\"\r\n                ? [maxNameLength]\r\n                : [number, availability]\r\n            }\r\n            normalize={props.number === \"number\" ? lessThan(null) : undefined}\r\n          />\r\n        </div>\r\n        {props.number === \"number\" && (\r\n          <div>\r\n            <input\r\n              type=\"submit\"\r\n              className={style.btn}\r\n              value=\"set\"\r\n              disabled={props.pristine || props.submitting}\r\n              style={\r\n                props.pristine || props.submitting || props.invalid\r\n                  ? { opacity: 0.4, cursor: \"not-allowed\" }\r\n                  : { opacity: 1 }\r\n              }\r\n            />\r\n            <p> maximum transfer amount: 10000 pw </p>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet UserReduxForm = reduxForm({\r\n  // a unique name for the form\r\n  form: \"getUser\",\r\n  initialValues: {\r\n    min: 0,\r\n    max: 1000\r\n  }\r\n})(userForm);\r\n\r\nUserReduxForm = connect(state => {\r\n  return {\r\n    MainState: state.MainReducer\r\n  };\r\n})(UserReduxForm);\r\n\r\nexport default UserReduxForm;\r\n","import React from 'react'\r\n\r\nexport const RadioField = ({ input, meta, ...rest }) => (\r\n  <input {...input} {...rest} />\r\n);\r\n\r\n","import {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport style from '../transactionBlock.module.sass'\r\nimport { RadioField } from '../../../../common/RadioButton/RadioButton'\r\n\r\n\r\n\r\n\r\nlet checkUserForm = (props) => {\r\n\r\n  return (\r\n    \r\n      <form onSubmit={props.handleSubmit}>\r\n        <ul>\r\n          {props.recipients.map(recipient => {\r\n            return (\r\n              <label htmlFor={recipient.id} key={recipient.id}>\r\n                <li key={recipient.id}>\r\n                  <Field\r\n                    component={RadioField}\r\n                    className={style.inputRadio}\r\n                    type=\"radio\"\r\n                    name=\"username\"\r\n                    id={recipient.id}\r\n                    value={recipient.name}\r\n                    \r\n                  />\r\n                  <span key={recipient.id}>{recipient.name}</span>\r\n                  <input\r\n                    className={style.inputChoose}\r\n                    type=\"submit\"\r\n                    value=\"\"\r\n                    disabled={props.hasCheckedValue !== recipient.name}\r\n                    style={props.hasCheckedValue !== recipient.name ?\r\n                          {opacity: 0, pointerEvents: 'none'} :\r\n                          {opacity: 1, pointerEvents: 'auto'}\r\n                        }\r\n                  />\r\n                </li>\r\n              </label>\r\n            );\r\n          })}\r\n        </ul>\r\n      </form>\r\n    \r\n  );\r\n}\r\n\r\ncheckUserForm = reduxForm({\r\n  form: 'checkUser',\r\n  initialValues: {\r\n\r\n  }\r\n})( checkUserForm )\r\n\r\nconst selector = formValueSelector('checkUser')\r\ncheckUserForm = connect(state => {\r\n  // can select values individually\r\n  const hasCheckedValue = selector(state, 'username')\r\n\r\n  return {\r\n    hasCheckedValue\r\n  }\r\n})(checkUserForm)\r\n\r\nexport default checkUserForm","import React from \"react\";\r\nimport style from \"./transactionBlock.module.sass\";\r\nimport UserReduxForm from \"./userForm/UserForm\";\r\nimport CheckUserReduxForm from \"./checkUserForm/checkUserFrom\";\r\n\r\nexport default props => {\r\n\r\n  const transObj = {\r\n    name: props.recipient.name,\r\n    amount: props.recipient.amount\r\n  };\r\n\r\n  const isRecipients = props.recipients.length\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <h2 className={style.header}>Create new transaction</h2>\r\n      {/* {props.recipients.length > 0 && */}\r\n      <button \r\n        className={style.clearBtn} \r\n        onClick={props.onClearRecipient}\r\n        style={{opacity: isRecipients === 0 ? '0.3' : '1',\r\n                cursor: isRecipients === 0 ? 'default' : 'pointer'}}\r\n        disabled={isRecipients === 0}\r\n\r\n      >\r\n        Clear\r\n      </button>\r\n      {/* } */}\r\n\r\n      {props.recipient.name === \"\" ? (\r\n        <div>\r\n          <UserReduxForm\r\n            onChange={props.onFetchFilterRecipientAsync}\r\n            placeholder=\"Enter the name of recipient\"\r\n            type=\"text\"\r\n          />\r\n          <CheckUserReduxForm\r\n            recipients={props.recipients}\r\n            onSubmit={props.setRecipientName}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className={style.recipientDiv}>\r\n          <p>\r\n            recipient:\r\n            <br />\r\n            <span className={style.recipientName}>{props.recipient.name}</span>\r\n          </p>\r\n\r\n          {props.recipient.amount === 0 ? (\r\n            <UserReduxForm\r\n              placeholder=\"Enter the Amount money\"\r\n              type=\"text\"\r\n              onSubmit={props.setRecipientAmount}\r\n              number=\"number\"\r\n            />\r\n          ) : (\r\n            <div>\r\n              <p>\r\n                Amount:\r\n                <br />\r\n                <span className={style.recipientName}>\r\n                  {props.recipient.amount}\r\n                </span>\r\n                PW\r\n              </p>\r\n              <h3>Confirm transaction ?</h3>\r\n              <div className={style.wrapperConfirmButtons}>\r\n                <button onClick={props.onClearRecipient}>Cancel</button>\r\n                <button onClick={props.onTransactionAsync.bind(null, transObj)}>\r\n                  Confirm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport style from \"./historyBlock.module.sass\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  useTable,\r\n  useGroupBy,\r\n  useFilters,\r\n  useSortBy,\r\n  useExpanded,\r\n  usePagination\r\n} from \"react-table\";\r\n// import 'react-table/react-table.css'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  table {\r\n    margin: 0 auto;\r\n    border-spacing: 0;\r\n    border: 1px solid green;\r\n\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default props => {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Transaction history\",\r\n        columns: [\r\n          {\r\n            Header: \"ID\",\r\n            accessor: \"id\"\r\n          },\r\n          {\r\n            Header: \"Name\",\r\n            accessor: \"username\"\r\n          },\r\n          {\r\n            Header: \"Date\",\r\n            accessor: \"date\"\r\n          },\r\n          {\r\n            Header: \"Amount\",\r\n            accessor: \"amount\"\r\n          },\r\n          {\r\n            Header: \"Balance\",\r\n            accessor: \"balance\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const defaultPropGetter = () => ({});\r\n  function Table({ columns, data, getRowProps = defaultPropGetter }) {\r\n    // Use the state and functions returned from useTable to build your UI\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n\r\n      page, // Instead of using 'rows', we'll use page,\r\n      // which has only the rows for the active page\r\n\r\n      // The rest of these things are super handy, too ;)\r\n      canPreviousPage,\r\n      canNextPage,\r\n      pageOptions,\r\n      pageCount,\r\n      gotoPage,\r\n      nextPage,\r\n      previousPage,\r\n      setPageSize,\r\n      state: { pageIndex, pageSize }\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        initialState: { pageIndex: 0 }\r\n      },\r\n      useSortBy,\r\n      usePagination\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <table {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  // Add the sorting props to control sorting. For this example\r\n                  // we can add them into the header props\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    {column.render(\"Header\")}\r\n                    {/* Add a sort direction indicator */}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? \" 🔽\"\r\n                          : \" 🔼\"\r\n                        : \"\"}\r\n                    </span>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row, i) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps(getRowProps(row))}>\r\n                  {row.cells.map(cell => {\r\n                    return (\r\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <br />\r\n        <div className={style.pagination}>\r\n          <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {\"<<\"}\r\n          </button>{\" \"}\r\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            {\"<\"}\r\n          </button>{\" \"}\r\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n            {\">\"}\r\n          </button>{\" \"}\r\n          <button\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n            disabled={!canNextPage}\r\n          >\r\n            {\">>\"}\r\n          </button>{\" \"}\r\n          <span>\r\n            Page{\" \"}\r\n            <strong>\r\n              <span className={style.pageNumber}>\r\n                {pageIndex + 1}\r\n              </span>\r\n              of \r\n              <span className={style.pageNumber}>\r\n                {pageOptions.length}\r\n              </span>\r\n            </strong>{\" \"}\r\n          </span>\r\n          <span>\r\n            | Go to page:{\" \"}\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={e => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                gotoPage(page);\r\n              }}\r\n              style={{ width: \"100px\" }}\r\n            />\r\n          </span>{\" \"}\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n          >\r\n            {[10, 20, 30, 40, 50].map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={style.wrapperHistory}>\r\n      <h2 className={style.header}>Transaction History</h2>\r\n      <p className={style.hint}>\r\n        You can repeat one of your transactions using double click on its line\r\n      </p>\r\n      <div className={style.tableWrapper}>\r\n        <Styles>\r\n          <Table\r\n            columns={columns}\r\n            data={props.arrayOfTransactions}\r\n            getRowProps={row => {\r\n              \r\n              if (Math.sign(row.original.amount) === 1) {\r\n                return;\r\n              }\r\n              return {\r\n                onDoubleClick: props.repeatTransaction.bind(null, row),\r\n                style: {\r\n                  background: Math.sign(row.original.amount) !== 1 ? 'rgba(0,0,0,.3)' : 'rgba(200,200,0,.8)',\r\n                },\r\n              };\r\n            }}\r\n          ></Table>\r\n        </Styles>\r\n      </div>\r\n      {/* <div>{props.arrayOfTransactions[0].username}</div>\r\n      <div>{props.arrayOfTransactions[0].id}</div>\r\n      <div>{props.arrayOfTransactions[0].date}</div>\r\n      <div>{props.arrayOfTransactions[0].amount}</div>\r\n      <div>{props.arrayOfTransactions[0].balance}</div> */}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport style from \"./preloader.module.sass\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div\r\n      className={style.wrapperImage}\r\n      style={{ opacity: !props.isLoaded ? \"1\" : \"0\",\r\n              zIndex: !props.isLoaded ? '2' : '-1' }}\r\n    >\r\n      {/* <img src=\"images/bg.jpg\" /> */}\r\n    </div>\r\n  );\r\n};\r\n","import { Redirect } from 'react-router-dom';\r\nimport React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.LoginReducer.loginData.isAuth\r\n\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (this.props.isAuth === false) {\r\n        return <Redirect to=\"/login\" />\r\n      }\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent = \r\n    connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}","import { connect } from 'react-redux';\r\n\r\nimport Main from './Main';\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\nimport { onLogout } from '../../../redux/actions';\r\nimport { onFetchCurrentUserDataAsync,\r\n   onButtonCreateTransaction,\r\n    onButtonHistoryTransaction,\r\n     onFetchFilterRecipientAsync,\r\n      onClearRecipient,\r\n      setRecipientName,\r\n      setRecipientAmount,\r\n      onTransactionAsync,\r\n      onGetListUserTransactionAsync,\r\n      repeatTransaction\r\n} from '../../../redux/actions/mainActions';\r\n// import { onSubmitLoginAsync } from '../../../redux/actions';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    MainState: state.MainReducer\r\n  }\r\n}\r\n\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Main)\r\n\r\nconst MainContainer = connect(\r\n  mapStateToProps,\r\n  {\r\n    onLogout,\r\n    onFetchCurrentUserDataAsync,\r\n    onButtonCreateTransaction,\r\n    onButtonHistoryTransaction,\r\n    onFetchFilterRecipientAsync,\r\n    onClearRecipient,\r\n    setRecipientName,\r\n    setRecipientAmount,\r\n    onTransactionAsync,\r\n    onGetListUserTransactionAsync,\r\n    repeatTransaction\r\n  }\r\n)(AuthRedirectComponent)\r\n\r\nexport default MainContainer\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport style from \"./main.module.sass\";\r\nimport LoginButton from \"../../common/LoginButton/LoginButton\";\r\nimport MainHeader from \"./mainHeader/MainHeader\";\r\nimport ButtonSection from \"./buttonSection/ButtonSection\";\r\nimport TransactionBlock from \"./transactionBlock/TransactionBlock\";\r\nimport HistoryBlock from \"./historyBlock/HistoryBlock\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\nexport default props => {\r\n  \r\n  let [isLoaded, setIsLoaded] = useState(false);\r\n  let [appearHome, setAppearHome] = useState(\r\n    !props.MainState.isTransactionButton\r\n  );\r\n  // const [age, setAge] = useState(42);\r\n\r\n  useEffect(() => {\r\n    setIsLoaded(true)\r\n    props.onFetchCurrentUserDataAsync();\r\n    props.onGetListUserTransactionAsync();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.main} onLoad={() => setIsLoaded(true)}>\r\n      <Preloader isLoaded={isLoaded} />\r\n      {/* <NavLink to=\"/login\"> */}\r\n      {/* </NavLink> */}\r\n      <MainHeader\r\n        logout={props.onLogout}\r\n        name={props.MainState.userData.name}\r\n        balance={props.MainState.userData.balance}\r\n      />\r\n      \r\n\r\n      <ButtonSection\r\n        showCreateSection={props.onButtonCreateTransaction}\r\n        isTransactionBlockActive={props.MainState.isTransactionButton}\r\n        showHistorySection={props.onButtonHistoryTransaction}\r\n        isHistoryBlockActive={props.MainState.isHistoryButton}\r\n      />\r\n      {props.MainState.isTransactionButton && (\r\n        <CSSTransition\r\n          in={appearHome}\r\n          appear={true}\r\n          timeout={{\r\n            appear: 2000,\r\n            enter: 1000,\r\n            exit: 1000\r\n          }}\r\n          classNames=\"fade\"\r\n        >\r\n          <TransactionBlock\r\n            onFetchFilterRecipientAsync={props.onFetchFilterRecipientAsync}\r\n            recipients={props.MainState.filterRecipients}\r\n            recipient={props.MainState.recipient}\r\n            onClearRecipient={props.onClearRecipient}\r\n            setRecipientName={props.setRecipientName}\r\n            setRecipientAmount={props.setRecipientAmount}\r\n            onTransactionAsync={props.onTransactionAsync}\r\n            onFetchCurrentUserDataAsync={props.onFetchCurrentUserDataAsync}\r\n          />\r\n        </CSSTransition>\r\n      )}\r\n      {!props.MainState.isTransactionButton &&\r\n        !props.MainState.isHistoryButton &&\r\n        props.MainState.isTransationSuccess && (\r\n          <div className={style.congratulationWrap}>\r\n            <br />\r\n            <br />\r\n            Transaction success !!!\r\n            <br />\r\n            <h3>\r\n              You sent a transaction to the recipient\r\n              <br />\r\n              with the name:\r\n              <br />\r\n              <span>{props.MainState.successRecipient.name}</span>, in the\r\n              amount of\r\n              <span>{props.MainState.successRecipient.amount}</span>pw.\r\n            </h3>\r\n          </div>\r\n        )}\r\n\r\n      {!props.MainState.isTransactionButton &&\r\n        !props.MainState.isHistoryButton &&\r\n        props.MainState.isTransationFailed && (\r\n          <div className={style.congratulationWrap} style={{color: '#0078D7'}}>\r\n            <br />\r\n            <br />\r\n            Transaction failed !!!\r\n            <br />\r\n            <h3>\r\n              You are not logged in. Session timed out.\r\n              <br />\r\n              Pleace login again!\r\n            </h3>\r\n          </div>\r\n        )}\r\n\r\n      {props.MainState.isHistoryButton && (\r\n        <CSSTransition\r\n          in={appearHome}\r\n          appear={true}\r\n          timeout={{\r\n            appear: 2000,\r\n            enter: 1000,\r\n            exit: 1000\r\n          }}\r\n          classNames=\"fade\"\r\n        >\r\n          <HistoryBlock\r\n            arrayOfTransactions={props.MainState.arrayOfTransactions}\r\n            repeatTransaction={props.repeatTransaction}\r\n          />\r\n        </CSSTransition>\r\n      )}\r\n\r\n      {/* <p>id: {props.MainState.userData.id}</p>\r\n      <p>name: {props.MainState.userData.name}</p>\r\n      <p>email: {props.MainState.userData.email}</p>\r\n      <p>balance: {props.MainState.userData.balance}</p> */}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport './App.sass';\nimport { BrowserRouter, Route, HashRouter, Switch } from 'react-router-dom';\nimport LoginContainer from './components/pages/Login/LoginContainer';\n\nimport ContainerRegister from './components/pages/Register/ContainerRegister';\nimport MainContainer from './components/pages/Main/MainContainer';\n\n\n\n\n\nfunction App() {\n\n  return (\n    <HashRouter>\n      <Switch>\n        <div className=\"App\">\n\n          <Route path='/' exact\n            render={() => <MainContainer />} />\n\n          <Route path='/login'\n            render={() => <LoginContainer />} />\n\n          <Route path='/register'\n            render={() => <ContainerRegister />} />\n        </div>\n      </Switch>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","import {\r\n  SUBMIT_LOGIN,\r\n  ON_LOGIN_ERROR,\r\n  LOGOUT,\r\n  ON_REGISTER_ERROR,\r\n  SUBMIT_REGISTER,\r\n  CLEAR_FORM_WARNING,\r\n  CHANGE_REGISTERPAGE_WITH_DELAY,\r\n  CHANGE_LOGINPAGE_WITH_DELAY\r\n} from \"../types\";\r\n\r\nlet initialState = {\r\n  isChangeRegisterPage: false,\r\n  isChangeLoginPage: false,\r\n  isRegisterSucces: false,\r\n  warningText: '',\r\n  jwt: '',\r\n  loginData: {\r\n    isAuth: true\r\n  }\r\n}\r\n\r\nconst LoginReducer = (state = initialState, action) => {\r\n  switch (true) {\r\n    case (action.type === CHANGE_LOGINPAGE_WITH_DELAY): {\r\n      let stateCopy = { ...state }\r\n      stateCopy.isChangeLoginPage = true\r\n      return stateCopy\r\n    }\r\n    case (action.type === CHANGE_REGISTERPAGE_WITH_DELAY): {\r\n      let stateCopy = { ...state }\r\n      if (stateCopy.isRegisterSucces) {\r\n        stateCopy.isChangeRegisterPage = true\r\n        stateCopy.isRegisterSucces = false\r\n      }\r\n      return stateCopy\r\n    }\r\n    case (action.type === CLEAR_FORM_WARNING): {\r\n      let stateCopy = { ...state }\r\n      stateCopy.warningText = ''\r\n      return stateCopy\r\n    }\r\n    case (action.type === LOGOUT): {\r\n      let stateCopy = { ...state }\r\n      stateCopy.loginData.isAuth = false;\r\n      stateCopy.isChangeLoginPage = false;\r\n      stateCopy.isChangeRegisterPage = false\r\n      return stateCopy\r\n    };\r\n    case (action.type === SUBMIT_LOGIN): {\r\n      let stateCopy = { ...state }\r\n      stateCopy.jwt = action.loginData.data.id_token;\r\n      stateCopy.loginData.isAuth = true;\r\n      stateCopy.warningText = 'Success'\r\n\r\n      return stateCopy\r\n    }\r\n    case (action.type === SUBMIT_REGISTER): {\r\n\r\n      let stateCopy = { ...state }\r\n      stateCopy.warningText = action.servResponce\r\n\r\n      if (action.servResponce.status && action.servResponce.status === 201) {\r\n        stateCopy.warningText = action.servResponce.statusText\r\n        stateCopy.isRegisterSucces = true\r\n      }\r\n      return stateCopy\r\n    }\r\n    case (action.type === ON_LOGIN_ERROR): {\r\n      let stateCopy = { ...state }\r\n\r\n      if (action.errorData === '400') {\r\n        stateCopy.warningText = 'Fill in all the fields!'\r\n      }\r\n\r\n      if (action.errorData === '401') {\r\n        stateCopy.warningText = 'Invalid Username or password!'\r\n      }\r\n\r\n      return stateCopy\r\n    }\r\n    case (action.type === ON_REGISTER_ERROR): {\r\n      let stateCopy = { ...state }\r\n      stateCopy.warningText = action.errorData\r\n      return stateCopy\r\n    }\r\n    default:\r\n      return { ...state }\r\n  }\r\n\r\n}\r\n\r\nexport default LoginReducer ","import { FETCH_USER_DATA,\r\n   FETCH_USER_DATA_ERROR,\r\n    ON_BUTTON_CREATE_TRANSACTION,\r\n     ON_BUTTON_HISTORY_TRANSACTION,\r\n     ON_GET_USERS,\r\n     ON_CLEAR_RECIPIENT_LIST,\r\n     SET_RECIPIENT_NAME,\r\n     SET_RECIPIENT_AMOUNT,\r\n     ON_TRANSACTION_SUCCESS,\r\n     CLEAR_FORM_WARNING,\r\n     CLOSE_MENU,\r\n     GET_LIST_USER_TRANSACTION,\r\n     REPEAT_TRANSACTION,\r\n     ON_TRANSACTION_FAil,\r\n     FETCH_ALL_SYSTEM_USERS\r\n      } from \"../types\";\r\n\r\nlet initialState = {\r\n  allSystemUsers: [],\r\n  objOfSuccessTransaction: {},\r\n  arrayOfTransactions: [],\r\n  isTransationSuccess: false,\r\n  isTransationFailed: false,\r\n  successRecipient: {\r\n    name: '',\r\n    amount: 0\r\n  },\r\n  recipient: {\r\n    name: '',\r\n    amount: 0\r\n  },\r\n  filterRecipients: [],\r\n  isHistoryButton: false,\r\n  isTransactionButton: false,\r\n  userData: {\r\n    id: 0,\r\n    name: '',\r\n    email: '',\r\n    balance: 0\r\n  }\r\n}\r\n\r\nconst MainReducer = (state = initialState, action) => {\r\n  switch (true) {\r\n    case (action.type === FETCH_ALL_SYSTEM_USERS): {\r\n      let stateCopy = { ...state}\r\n      stateCopy.allSystemUsers = action.arrUsers\r\n      return stateCopy\r\n    }\r\n    case (action.type === REPEAT_TRANSACTION): {\r\n      let stateCopy = { ...state}\r\n        stateCopy.recipient.name = stateCopy.successRecipient.name = action.transData.original.username\r\n        stateCopy.recipient.amount = stateCopy.successRecipient.amount = Math.abs(action.transData.original.amount)\r\n        stateCopy.isTransactionButton = true\r\n        stateCopy.isHistoryButton = false\r\n      \r\n      return stateCopy\r\n    }\r\n    case (action.type === GET_LIST_USER_TRANSACTION): {\r\n      let stateCopy = { ...state}\r\n        stateCopy.arrayOfTransactions = action.arrTransactions.data.trans_token\r\n      return stateCopy\r\n    }\r\n    case (action.type === CLOSE_MENU): {\r\n      let stateCopy = { ...state}\r\n        stateCopy.isTransactionButton = false\r\n        stateCopy.isHistoryButton = false\r\n        stateCopy.isTransactionButton = false\r\n        stateCopy.recipient.amount = 0\r\n        stateCopy.recipient.name = ''\r\n      return stateCopy\r\n    }\r\n\r\n    case (action.type === CLEAR_FORM_WARNING): {\r\n      let stateCopy = { ...state}\r\n        stateCopy.isTransationFailed = false\r\n        stateCopy.isTransationSuccess = false\r\n      return stateCopy\r\n    }\r\n    case (action.type === ON_TRANSACTION_FAil): {\r\n      let stateCopy = { ...state}\r\n      stateCopy.isTransationFailed = true\r\n      stateCopy.recipient.name = ''\r\n      stateCopy.recipient.amount = 0\r\n      stateCopy.isTransactionButton = false\r\n      stateCopy.filterRecipients = []\r\n\r\n      return stateCopy\r\n    }\r\n    case (action.type === ON_TRANSACTION_SUCCESS): {\r\n      let stateCopy = { ...state}\r\n        stateCopy.isTransationSuccess = true\r\n        stateCopy.recipient.name = ''\r\n        stateCopy.recipient.amount = 0\r\n        stateCopy.isTransactionButton = false\r\n        stateCopy.filterRecipients = []\r\n        stateCopy.objOfSuccessTransaction = {...action.transData.data.trans_token}\r\n      return stateCopy\r\n    }\r\n    case (action.type === SET_RECIPIENT_AMOUNT): {\r\n      let stateCopy = { ...state}\r\n        stateCopy.recipient.amount = stateCopy.successRecipient.amount = action.amount\r\n      return stateCopy\r\n    }\r\n    case (action.type === SET_RECIPIENT_NAME): {\r\n      let stateCopy = { ...state}\r\n        stateCopy.recipient.name = stateCopy.successRecipient.name = action.name\r\n      return stateCopy\r\n    }\r\n    case (action.type === ON_CLEAR_RECIPIENT_LIST): {\r\n      let stateCopy = { ...state}\r\n      stateCopy.filterRecipients = []\r\n      stateCopy.recipient.name = ''\r\n      stateCopy.recipient.amount = 0\r\n      return stateCopy\r\n    }\r\n    case (action.type === ON_GET_USERS): {\r\n      let stateCopy = { ...state}\r\n        stateCopy.filterRecipients = [...action.recipients.data]\r\n      return stateCopy\r\n    }\r\n    case (action.type === ON_BUTTON_HISTORY_TRANSACTION): {\r\n      let stateCopy = { ...state}\r\n      if (!stateCopy.isTransactionButton) {\r\n        stateCopy.isHistoryButton = !stateCopy.isHistoryButton\r\n      }\r\n\r\n      return stateCopy\r\n    }\r\n    case (action.type === ON_BUTTON_CREATE_TRANSACTION): {\r\n      let stateCopy = { ...state}\r\n      if (!stateCopy.isHistoryButton) {\r\n        stateCopy.isTransactionButton = !stateCopy.isTransactionButton\r\n      }\r\n      if (!stateCopy.isTransactionButton) {\r\n        stateCopy.filterRecipients = []\r\n        stateCopy.recipient.name = ''\r\n      }\r\n      return stateCopy\r\n    }\r\n    case (action.type === FETCH_USER_DATA): {\r\n      let stateCopy = { ...state}\r\n      stateCopy.userData = {...action.userObj.data.user_info_token}\r\n      stateCopy.itAuth = true\r\n      return stateCopy\r\n    }\r\n    \r\n    default:\r\n      return { ...state }\r\n  }\r\n\r\n}\r\n\r\nexport default MainReducer","import { put, takeEvery, all } from 'redux-saga/effects'\r\n\r\nconst delay = (ms) => new Promise(res => setTimeout(res, ms))\r\n\r\n// Наша Сага-наблюдатель: создаёт новые incrementAsync задачи на каждом INCREMENT_ASYNC\r\nexport function* watchIncrementAsync() {\r\n  yield takeEvery('SUBMIT_REGISTER', delayChangeRegisterPage)\r\n  yield takeEvery('SUBMIT_LOGIN', delayChangeLoginPage )\r\n  yield takeEvery('ON_TRANSACTION_SUCCESS', clearTransWarnings)\r\n  yield takeEvery('ON_TRANSACTION_FAil', onTransactionFail)\r\n  yield takeEvery('LOGOUT', onLogout)\r\n \r\n\r\n\r\n  // yield takeEvery('RIGHT_BUTTON_CLICK', showReactText)\r\n  // yield takeEvery(['INITIAL_SLIDE_LEFT', 'INITIAL_SLIDE_RIGHT' ], unblockSlider)\r\n\r\n}\r\n\r\nexport function* onTransactionFail() {\r\n  yield delay(5000)\r\n  yield put({type: 'LOGOUT'})\r\n}\r\n\r\nexport function* onLogout() {\r\n  yield put({type: 'ON_CLEAR_RECIPIENT_LIST'})\r\n  yield put({type: 'CLOSE_MENU'})\r\n}\r\n\r\nexport function* clearTransWarnings() {\r\n  yield delay(9150)\r\n  yield put({type: 'CLEAR_FORM_WARNING'})\r\n}\r\n\r\nexport function* delayChangeRegisterPage() {\r\n    yield delay(1150)\r\n    yield put({type: 'CHANGE_REGISTERPAGE_WITH_DELAY'})\r\n    yield put({type: 'LOGOUT'})\r\n    // yield put({type: 'CHANGE_TV'})\r\n  }\r\n  export function* delayChangeLoginPage() {\r\n    yield delay(1150)\r\n    yield put({type: 'CHANGE_LOGINPAGE_WITH_DELAY'})\r\n    // yield put({type: 'CHANGE_TV'})\r\n  }\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n      // helloSaga,\r\n      watchIncrementAsync()\r\n    ])\r\n  }\r\n\r\n  ","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport LoginReducer from \"./reducers/LoginReducer\";\r\nimport MainReducer from \"./reducers/MainReducer\";\r\n\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from \"./sagas\";\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst middleware = [ReduxThunk, sagaMiddleware]\r\n\r\nlet reducers = combineReducers({\r\n  LoginReducer,\r\n  MainReducer,\r\n  form: formReducer\r\n})\r\n\r\nlet store = createStore(\r\n  reducers,\r\n  applyMiddleware(...middleware)\r\n  );\r\n  \r\nsagaMiddleware.run(rootSaga)\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hint\":\"historyBlock_hint__1iNPH\",\"pagination\":\"historyBlock_pagination__30BC6\",\"pageNumber\":\"historyBlock_pageNumber__29hEi\",\"wrapperHistory\":\"historyBlock_wrapperHistory__1gLY8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__1vXH0\",\"congratulationWrap\":\"main_congratulationWrap__2pusf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"mainHeader_mainHeader__341VC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperButtonSection\":\"buttonSection_wrapperButtonSection__vjQt9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"userForm_btn__14kCP\",\"textbox\":\"userForm_textbox__2PJmj\"};"],"sourceRoot":""}